name: KryptoBot CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 mypy
    
    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run type checking
      run: |
        mypy .
    
    - name: Check required secrets
      id: check_secrets
      run: |
        if [ -n "${{ secrets.ALPACA_API_KEY }}" ] && [ -n "${{ secrets.ALPACA_SECRET_KEY }}" ]; then
          echo "alpaca_configured=true" >> $GITHUB_OUTPUT
        else
          echo "alpaca_configured=false" >> $GITHUB_OUTPUT
          echo "Warning: Alpaca API credentials not configured. Some tests will be skipped."
        fi
        
        if [ -n "${{ secrets.EMAIL_USERNAME }}" ] && [ -n "${{ secrets.EMAIL_PASSWORD }}" ]; then
          echo "email_configured=true" >> $GITHUB_OUTPUT
        else
          echo "email_configured=false" >> $GITHUB_OUTPUT
          echo "Warning: Email credentials not configured. Email notification tests will be skipped."
        fi
        
        if [ -n "${{ secrets.MT_SERVER }}" ] && [ -n "${{ secrets.MT_PORT }}" ] && \
           [ -n "${{ secrets.MT_USERNAME }}" ] && [ -n "${{ secrets.MT_PASSWORD }}" ]; then
          echo "mt_configured=true" >> $GITHUB_OUTPUT
        else
          echo "mt_configured=false" >> $GITHUB_OUTPUT
          echo "Info: MetaTrader configuration not found. MetaTrader tests will be skipped."
        fi
    
    - name: Run core tests
      run: |
        pytest --cov=. --cov-report=xml -m "not integration and not email and not metatrader"
    
    - name: Run Alpaca integration tests
      if: steps.check_secrets.outputs.alpaca_configured == 'true'
      env:
        ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
        ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
      run: |
        pytest -v -m "integration and not email and not metatrader"
    
    - name: Run email notification tests
      if: steps.check_secrets.outputs.email_configured == 'true'
      env:
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        pytest -v -m "email"
    
    - name: Run MetaTrader tests
      if: steps.check_secrets.outputs.mt_configured == 'true'
      env:
        MT_SERVER: ${{ secrets.MT_SERVER }}
        MT_PORT: ${{ secrets.MT_PORT }}
        MT_USERNAME: ${{ secrets.MT_USERNAME }}
        MT_PASSWORD: ${{ secrets.MT_PASSWORD }}
      run: |
        pytest -v -m "metatrader"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run linters
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black . --check
        isort . --check-only --profile black

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run security checks
      run: |
        bandit -r . -ll
        safety check 